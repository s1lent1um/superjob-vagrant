# vim: set foldmethod=indent filetype=nginx :

upstream 0sjob_backend {
	server 127.0.0.1:81;
}

upstream 0sjob_backend_nodejs {
	server 127.0.0.1:3000;
}

upstream 0sjob_public {
	server 127.0.0.1:81;
}

upstream 0sjob_public_fallback {
	server 127.0.0.1:81;
}

upstream 0sjob_debug {
	server 127.0.0.1:81;
}

upstream 0sjob_collector {
	server 127.0.0.1:4000;
}

# cache mobile api
proxy_cache_path    /srv/src/nginx/proxy_cache_services_0sjob   levels=1:2  keys_zone=SERVICES_0sjob:10m;

#
# User agents: mobile devices
#

map $http_user_agent $0sjob_is_mobile {
       "~*(iPhone.*Googlebot|Googlebot-Mobile)" "mobile"; # https://developers.google.com/webmasters/mobile-sites/references/googlebot

       "~*android|ipad|playbook|silk" "mobile"; # tablets
       "~*(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino"  "mobile";

       "~*^(1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-)" "mobile";

       default "";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop:$cookie_mm" $0sjob_staging_upstream {
	"mobile::1" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop:$cookie_hr_id:$cookie_reg_user_id" $0sjob_upstream_anon_only {
	"mobile:::" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop:$cookie_reg_user_id" $0sjob_upstream_not_a_reg_user {
	"mobile::" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop:$cookie_hr_id" $0sjob_upstream_not_a_hr_user {
	"mobile::" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop:$arg_id_subs" $0sjob_upstream_for_resume_search {
	"mobile::" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop" $0sjob_upstream {
	"mobile:" "0sjob_backend_nodejs";
	default "0sjob_backend";
}

map "$0sjob_is_mobile:$cookie_set_use_desktop" $0sjob_upstream_mock {
	default "0sjob_backend_nodejs";
}

map $modulus $0sjob_two_digit_modulus {

	default $modulus;
	0	00;
	1	01;
	2	02;
	3	03;
	4	04;
	5	05;
	6	06;
	7	07;
	8	08;
	9	09;
}
map $modulus $0sjob_pbe_server {
	default	unknown;
	~^\d?\d$	0sjob_public;
}

map $0sjob_is_mobile $0sjob_x_device_type {
    "mobile" "mobile";
    default "desktop";
}





#
# IMG SSL ru
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ru.crt;
	ssl_certificate_key  certs/0sjob.ru.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name img.0sjob.ru;

	access_log /srv/src/nginx/logs/ssl.img.0sjob.ru_access.log;
	error_log /srv/src/nginx/logs/ssl.img.0sjob.ru_error.log;

	
	location /.git/ { rewrite /.* / permanent; }

	location / {
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_set_header  Host       img.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}


#
# IMG SSL ua
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ua.crt;
	ssl_certificate_key  certs/0sjob.ua.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name img.0sjob.ua;

	access_log /srv/src/nginx/logs/ssl.img.0sjob.ua_access.log;
	error_log /srv/src/nginx/logs/ssl.img.0sjob.ua_error.log;

	
	location /.git/ { rewrite /.* / permanent; }

	location / {
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_set_header  Host       img.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}


#
# IMG SSL uz
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.uz.crt;
	ssl_certificate_key  certs/0sjob.uz.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name img.0sjob.uz;

	access_log /srv/src/nginx/logs/ssl.img.0sjob.uz_access.log;
	error_log /srv/src/nginx/logs/ssl.img.0sjob.uz_error.log;

	
	location /.git/ { rewrite /.* / permanent; }

	location / {
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_set_header  Host       img.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}



#
# IMG
#
server {
	listen 0.0.0.0:80;

	server_name img.0sjob.ru img.0sjob.ua img.0sjob.uz;

	access_log /srv/src/nginx/logs/img.0sjob.ru_access.log;
	error_log /srv/src/nginx/logs/img.0sjob.ru_error.log;

	
	location /.git/ { rewrite /.* / permanent; }

	location / {
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_set_header  Host       img.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}






#
# PUBLIC SSL ru
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ru.crt;
	ssl_certificate_key  certs/0sjob.ru.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name  public.0sjob.ru;
	error_log	/srv/src/nginx/logs/ssl.public.0sjob.ru_error.log;
	access_log	/srv/src/nginx/logs/ssl.public.0sjob.ru_access.log;

	
	location /.git/ { rewrite /.* / permanent; }

	# Вырезаем хэш из URL картинки
	location ~ "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$"
	{
		# Устанавливаем переменную, обозначающую, что картинку запросили с хешом
		# А значит браузеру содержимое урла можно кешировать до самой смерти
		set $is_image_with_hash 1;
		rewrite "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /images/$1.$2 last;
	}

	# ATEAM-4
	location /robots.txt {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host www.0sjob.ru;
		proxy_set_header X-Original-Host $host;
		proxy_pass http://0sjob_backend;
	}

	location / {
		#access_log  public.0sjob.ru__access.log;
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://0sjob_public;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";



	}

	location ~ "^/images/temp.ru/resume/.*/\d*(\d{2})" {
		#access_log  public.0sjob.ru_resume_temp_access.log;
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	# Этот location выделен для того чтобы можно было отделить отдачу содержимого на другой бэкенд
	location ~ "^/images/resume_fotos/\d+/(\d{2})/" {
		#access_log  public.0sjob.ru_resume_access.log;
		error_page 403 /403/index.html;
		error_page 404 = @resume_photos_fallback;
		error_page   500 502 503 504  @errors;
		proxy_intercept_errors on;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	location @resume_photos_fallback {
		#access_log public.0sjob.ru_resume_fallback_access.log;

		set $lead_digit 0;
		if ($uri ~ "^/images/resume_fotos/\d+/\d+/\d*(\d)\d{5}"){
			set $lead_digit $1;
		}

		rewrite "^/images/resume_fotos/(\d{2})(\d)/(\d{2})/(\d*).(large|medium|small)(.*)" /images/resume_fotos.ru/$lead_digit$1/$2$3/$5/$4$6 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/clients_logos.ru/\d*?(\d{1,2})\."
	{
		#access_log  public.0sjob.ru_pbeproxy_access.log;
		set $modulus $1;
		set $public_server 0sjob_public;

		if ($is_image_with_hash)
		{
			expires max;
		}

		rewrite ^/images/clients_logos.ru/(.*)      /images/clients_logos.ru/$0sjob_two_digit_modulus/$1 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass http://$0sjob_pbe_server;

		error_page 404 = @clients_logos_fallback;
		# перенаправлять проксированные ответы с кодом от 400 и выше на обработку nginx'у с помощью директивы error_page
		proxy_intercept_errors on;
	}

	location @clients_logos_fallback
	{
		#access_log  public.0sjob.ru_fallback_access.log;
		rewrite ^/images/clients_logos.ru/\d\d/(.*) /images/clients_logos.ru/$1 break;

		add_header X-Path $uri; # FIXME remove it
		add_header X-Legacy-Server true; # FIXME remove it

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/portfolio_photos/\d+/(\d{2})/" {
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}


#
# PUBLIC SSL ua
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ua.crt;
	ssl_certificate_key  certs/0sjob.ua.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name  public.0sjob.ua;
	error_log	/srv/src/nginx/logs/ssl.public.0sjob.ua_error.log;
	access_log	/srv/src/nginx/logs/ssl.public.0sjob.ua_access.log;

	
	location /.git/ { rewrite /.* / permanent; }

	# Вырезаем хэш из URL картинки
	location ~ "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$"
	{
		# Устанавливаем переменную, обозначающую, что картинку запросили с хешом
		# А значит браузеру содержимое урла можно кешировать до самой смерти
		set $is_image_with_hash 1;
		rewrite "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /images/$1.$2 last;
	}

	# ATEAM-4
	location /robots.txt {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host www.0sjob.ru;
		proxy_set_header X-Original-Host $host;
		proxy_pass http://0sjob_backend;
	}

	location / {
		#access_log  public.0sjob.ru__access.log;
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://0sjob_public;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";



	}

	location ~ "^/images/temp.ru/resume/.*/\d*(\d{2})" {
		#access_log  public.0sjob.ru_resume_temp_access.log;
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	# Этот location выделен для того чтобы можно было отделить отдачу содержимого на другой бэкенд
	location ~ "^/images/resume_fotos/\d+/(\d{2})/" {
		#access_log  public.0sjob.ru_resume_access.log;
		error_page 403 /403/index.html;
		error_page 404 = @resume_photos_fallback;
		error_page   500 502 503 504  @errors;
		proxy_intercept_errors on;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	location @resume_photos_fallback {
		#access_log public.0sjob.ru_resume_fallback_access.log;

		set $lead_digit 0;
		if ($uri ~ "^/images/resume_fotos/\d+/\d+/\d*(\d)\d{5}"){
			set $lead_digit $1;
		}

		rewrite "^/images/resume_fotos/(\d{2})(\d)/(\d{2})/(\d*).(large|medium|small)(.*)" /images/resume_fotos.ru/$lead_digit$1/$2$3/$5/$4$6 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/clients_logos.ru/\d*?(\d{1,2})\."
	{
		#access_log  public.0sjob.ru_pbeproxy_access.log;
		set $modulus $1;
		set $public_server 0sjob_public;

		if ($is_image_with_hash)
		{
			expires max;
		}

		rewrite ^/images/clients_logos.ru/(.*)      /images/clients_logos.ru/$0sjob_two_digit_modulus/$1 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass http://$0sjob_pbe_server;

		error_page 404 = @clients_logos_fallback;
		# перенаправлять проксированные ответы с кодом от 400 и выше на обработку nginx'у с помощью директивы error_page
		proxy_intercept_errors on;
	}

	location @clients_logos_fallback
	{
		#access_log  public.0sjob.ru_fallback_access.log;
		rewrite ^/images/clients_logos.ru/\d\d/(.*) /images/clients_logos.ru/$1 break;

		add_header X-Path $uri; # FIXME remove it
		add_header X-Legacy-Server true; # FIXME remove it

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/portfolio_photos/\d+/(\d{2})/" {
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}


#
# PUBLIC SSL uz
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.uz.crt;
	ssl_certificate_key  certs/0sjob.uz.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name  public.0sjob.uz;
	error_log	/srv/src/nginx/logs/ssl.public.0sjob.uz_error.log;
	access_log	/srv/src/nginx/logs/ssl.public.0sjob.uz_access.log;

	
	location /.git/ { rewrite /.* / permanent; }

	# Вырезаем хэш из URL картинки
	location ~ "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$"
	{
		# Устанавливаем переменную, обозначающую, что картинку запросили с хешом
		# А значит браузеру содержимое урла можно кешировать до самой смерти
		set $is_image_with_hash 1;
		rewrite "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /images/$1.$2 last;
	}

	# ATEAM-4
	location /robots.txt {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host www.0sjob.ru;
		proxy_set_header X-Original-Host $host;
		proxy_pass http://0sjob_backend;
	}

	location / {
		#access_log  public.0sjob.ru__access.log;
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://0sjob_public;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";



	}

	location ~ "^/images/temp.ru/resume/.*/\d*(\d{2})" {
		#access_log  public.0sjob.ru_resume_temp_access.log;
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	# Этот location выделен для того чтобы можно было отделить отдачу содержимого на другой бэкенд
	location ~ "^/images/resume_fotos/\d+/(\d{2})/" {
		#access_log  public.0sjob.ru_resume_access.log;
		error_page 403 /403/index.html;
		error_page 404 = @resume_photos_fallback;
		error_page   500 502 503 504  @errors;
		proxy_intercept_errors on;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	location @resume_photos_fallback {
		#access_log public.0sjob.ru_resume_fallback_access.log;

		set $lead_digit 0;
		if ($uri ~ "^/images/resume_fotos/\d+/\d+/\d*(\d)\d{5}"){
			set $lead_digit $1;
		}

		rewrite "^/images/resume_fotos/(\d{2})(\d)/(\d{2})/(\d*).(large|medium|small)(.*)" /images/resume_fotos.ru/$lead_digit$1/$2$3/$5/$4$6 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/clients_logos.ru/\d*?(\d{1,2})\."
	{
		#access_log  public.0sjob.ru_pbeproxy_access.log;
		set $modulus $1;
		set $public_server 0sjob_public;

		if ($is_image_with_hash)
		{
			expires max;
		}

		rewrite ^/images/clients_logos.ru/(.*)      /images/clients_logos.ru/$0sjob_two_digit_modulus/$1 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass http://$0sjob_pbe_server;

		error_page 404 = @clients_logos_fallback;
		# перенаправлять проксированные ответы с кодом от 400 и выше на обработку nginx'у с помощью директивы error_page
		proxy_intercept_errors on;
	}

	location @clients_logos_fallback
	{
		#access_log  public.0sjob.ru_fallback_access.log;
		rewrite ^/images/clients_logos.ru/\d\d/(.*) /images/clients_logos.ru/$1 break;

		add_header X-Path $uri; # FIXME remove it
		add_header X-Legacy-Server true; # FIXME remove it

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/portfolio_photos/\d+/(\d{2})/" {
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}



#
# PUBLIC
#
server {
	listen 0.0.0.0:80;

	server_name public.0sjob.ru public.0sjob.ua public.0sjob.uz;
	error_log	/srv/src/nginx/logs/public.0sjob.ru_error.log;
	access_log	/srv/src/nginx/logs/public.0sjob.ru_access.log;

	
	location /.git/ { rewrite /.* / permanent; }

	# Вырезаем хэш из URL картинки
	location ~ "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$"
	{
		# Устанавливаем переменную, обозначающую, что картинку запросили с хешом
		# А значит браузеру содержимое урла можно кешировать до самой смерти
		set $is_image_with_hash 1;
		rewrite "^/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /images/$1.$2 last;
	}

	# ATEAM-4
	location /robots.txt {
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host www.0sjob.ru;
		proxy_set_header X-Original-Host $host;
		proxy_pass http://0sjob_backend;
	}

	location / {
		#access_log  public.0sjob.ru__access.log;
		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
		error_page   500 502 503 504  @errors;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://0sjob_public;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";



	}

	location ~ "^/images/temp.ru/resume/.*/\d*(\d{2})" {
		#access_log  public.0sjob.ru_resume_temp_access.log;
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	# Этот location выделен для того чтобы можно было отделить отдачу содержимого на другой бэкенд
	location ~ "^/images/resume_fotos/\d+/(\d{2})/" {
		#access_log  public.0sjob.ru_resume_access.log;
		error_page 403 /403/index.html;
		error_page 404 = @resume_photos_fallback;
		error_page   500 502 503 504  @errors;
		proxy_intercept_errors on;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

	location @resume_photos_fallback {
		#access_log public.0sjob.ru_resume_fallback_access.log;

		set $lead_digit 0;
		if ($uri ~ "^/images/resume_fotos/\d+/\d+/\d*(\d)\d{5}"){
			set $lead_digit $1;
		}

		rewrite "^/images/resume_fotos/(\d{2})(\d)/(\d{2})/(\d*).(large|medium|small)(.*)" /images/resume_fotos.ru/$lead_digit$1/$2$3/$5/$4$6 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/clients_logos.ru/\d*?(\d{1,2})\."
	{
		#access_log  public.0sjob.ru_pbeproxy_access.log;
		set $modulus $1;
		set $public_server 0sjob_public;

		if ($is_image_with_hash)
		{
			expires max;
		}

		rewrite ^/images/clients_logos.ru/(.*)      /images/clients_logos.ru/$0sjob_two_digit_modulus/$1 break;

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass http://$0sjob_pbe_server;

		error_page 404 = @clients_logos_fallback;
		# перенаправлять проксированные ответы с кодом от 400 и выше на обработку nginx'у с помощью директивы error_page
		proxy_intercept_errors on;
	}

	location @clients_logos_fallback
	{
		#access_log  public.0sjob.ru_fallback_access.log;
		rewrite ^/images/clients_logos.ru/\d\d/(.*) /images/clients_logos.ru/$1 break;

		add_header X-Path $uri; # FIXME remove it
		add_header X-Legacy-Server true; # FIXME remove it

		proxy_set_header Host public.0sjob.ru;
		proxy_set_header X-Real-IP  $remote_addr;
		proxy_pass       http://0sjob_public_fallback;
	}

	location ~ "^/images/portfolio_photos/\d+/(\d{2})/" {
		error_page 403 /403/index.html;
		error_page 404 = /404/index.html;
		error_page   500 502 503 504  @errors;

		set $modulus $1;

		if ($is_image_with_hash)
		{
			expires max;
		}

		proxy_pass        http://$0sjob_pbe_server;
		proxy_set_header  Host       public.0sjob.ru;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}

}

#
# API
#

server {
	listen 0.0.0.0:80;

	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ru.crt;
	ssl_certificate_key  certs/0sjob.ru.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name  api.0sjob.ru;
	error_log    /srv/src/nginx/logs/ssl.api.0sjob.ru_error.log;
	access_log   /srv/src/nginx/logs/ssl.api.0sjob.ru_access.log;

	location /.git/ { rewrite /.* / permanent; }
	location / {
		proxy_set_header Host $host;
		proxy_pass http://0sjob_backend;
	}
}

#
# sj_collector
#
server {
	listen 0.0.0.0:80;
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ru.crt;
	ssl_certificate_key  certs/0sjob.ru.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


    server_name t.0sjob.ru;

    access_log	/srv/src/nginx/logs/tracker.0sjob_access.log;
    error_log	/srv/src/nginx/logs/tracker.0sjob_error.log;

    client_max_body_size	1m;
	proxy_buffers		16 16k;
	proxy_buffer_size	32k;

    location = /i {
        gzip off;
        proxy_pass   http://0sjob_collector;

        proxy_buffers		16 16k;
        proxy_buffer_size	32k;
        proxy_set_header  Host	   $host;
        proxy_set_header  X-Real-IP  $remote_addr;
    }
    location = /i.gif {
        gzip off;
        proxy_pass   http://0sjob_collector;

        proxy_buffers		16 16k;
        proxy_buffer_size	32k;
        proxy_set_header  Host	   $host;
        proxy_set_header  X-Real-IP  $remote_addr;
    }
    location = /t.js {
        gzip off;
        proxy_pass   http://0sjob_collector;

        proxy_set_header  Host	   $host;
        proxy_set_header  X-Real-IP  $remote_addr;
    }
    location = /com.snowplowanalytics.snowplow/tp2 {
        gzip off;
        proxy_pass   http://0sjob_collector;

        proxy_set_header  Host	   $host;
        proxy_set_header  X-Real-IP  $remote_addr;
    }
    location / { return 404; }
}






#
# WWW SSL ru
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ru.crt;
	ssl_certificate_key  certs/0sjob.ru.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name www.0sjob.ru 0sjob.ru;

	error_log       /srv/src/nginx/logs/ssl.0sjob.ru.error.log;
	access_log      /srv/src/nginx/logs/ssl.0sjob.ru.access.log;

	proxy_buffers        16 16k;
	proxy_buffer_size    32k;

	location /.git/ { rewrite /.* / permanent; }
	location /img/  {
		access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
		rewrite ^/(.*)$ https://img.0sjob.ru/$1  permanent;
	}

	location  /ssl/public/ {
		# Запросы идущие из этого location обрабатываются rewrite бэкенда - вырезается из запроса /ssl/public/
		# В ответ бэкенда модулем proxy_redirect возвращается /ssl/public/
		# В случае img.0sjob.ru и location /ssl/img/ эта конструкция не нужна т.к. vhost img.0sjob.ru зацеплен
		# к каталогу /www/vhosts/0sjob

		# Вырезаем хэш из URL картинки
		rewrite "^/ssl/public/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /ssl/public/images/$1.$2 break;

		proxy_pass		http://0sjob_public;
		proxy_redirect		/		/ssl/public/;
		proxy_set_header	Host		public.0sjob.ru;
	}
	location ~ ^/ssl(/img.*) {
		proxy_pass		http://0sjob_backend/$1;
		proxy_redirect		/		/ssl/img/;
		proxy_set_header	Host		img.0sjob.ru;
	}
	location / {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_read_timeout	180;
	}
	location ^~ /admin/developer/ {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
	location = /js/request/admin_view_check_processes.php {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
}


#
# WWW SSL ua
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.ua.crt;
	ssl_certificate_key  certs/0sjob.ua.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name www.0sjob.ua 0sjob.ua;

	error_log       /srv/src/nginx/logs/ssl.0sjob.ua.error.log;
	access_log      /srv/src/nginx/logs/ssl.0sjob.ua.access.log;

	proxy_buffers        16 16k;
	proxy_buffer_size    32k;

	location /.git/ { rewrite /.* / permanent; }
	location /img/  {
		access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
		rewrite ^/(.*)$ https://img.0sjob.ua/$1  permanent;
	}

	location  /ssl/public/ {
		# Запросы идущие из этого location обрабатываются rewrite бэкенда - вырезается из запроса /ssl/public/
		# В ответ бэкенда модулем proxy_redirect возвращается /ssl/public/
		# В случае img.0sjob.ua и location /ssl/img/ эта конструкция не нужна т.к. vhost img.0sjob.ua зацеплен
		# к каталогу /www/vhosts/0sjob

		# Вырезаем хэш из URL картинки
		rewrite "^/ssl/public/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /ssl/public/images/$1.$2 break;

		proxy_pass		http://0sjob_public;
		proxy_redirect		/		/ssl/public/;
		proxy_set_header	Host		public.0sjob.ua;
	}
	location ~ ^/ssl(/img.*) {
		proxy_pass		http://0sjob_backend/$1;
		proxy_redirect		/		/ssl/img/;
		proxy_set_header	Host		img.0sjob.ua;
	}
	location / {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_read_timeout	180;
	}
	location ^~ /admin/developer/ {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
	location = /js/request/admin_view_check_processes.php {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
}


#
# WWW SSL uz
#
server {
	
	listen	0.0.0.0:443;

	ssl                  on;
	ssl_certificate      certs/0sjob.uz.crt;
	ssl_certificate_key  certs/0sjob.uz.key;

	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;

	proxy_set_header X-Client-SSL on;
	proxy_set_header X-Client-Proto $scheme;
	proxy_set_header  Host       $host;
	proxy_set_header  X-Real-IP  $remote_addr;
	proxy_set_header  X-Device-Type $0sjob_is_mobile;


	server_name www.0sjob.uz 0sjob.uz;

	error_log       /srv/src/nginx/logs/ssl.0sjob.uz.error.log;
	access_log      /srv/src/nginx/logs/ssl.0sjob.uz.access.log;

	proxy_buffers        16 16k;
	proxy_buffer_size    32k;

	location /.git/ { rewrite /.* / permanent; }
	location /img/  {
		access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
		rewrite ^/(.*)$ https://img.0sjob.uz/$1  permanent;
	}

	location  /ssl/public/ {
		# Запросы идущие из этого location обрабатываются rewrite бэкенда - вырезается из запроса /ssl/public/
		# В ответ бэкенда модулем proxy_redirect возвращается /ssl/public/
		# В случае img.0sjob.uz и location /ssl/img/ эта конструкция не нужна т.к. vhost img.0sjob.uz зацеплен
		# к каталогу /www/vhosts/0sjob

		# Вырезаем хэш из URL картинки
		rewrite "^/ssl/public/images/(.*)_[a-f0-9]{32}\.([a-zA-Z]{3,4})$" /ssl/public/images/$1.$2 break;

		proxy_pass		http://0sjob_public;
		proxy_redirect		/		/ssl/public/;
		proxy_set_header	Host		public.0sjob.uz;
	}
	location ~ ^/ssl(/img.*) {
		proxy_pass		http://0sjob_backend/$1;
		proxy_redirect		/		/ssl/img/;
		proxy_set_header	Host		img.0sjob.uz;
	}
	location / {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_read_timeout	180;
	}
	location ^~ /admin/developer/ {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
	location = /js/request/admin_view_check_processes.php {
		proxy_pass http://0sjob_debug;
		proxy_redirect          off;
	}
}



server {

	listen 0.0.0.0:80;

	server_name
		students.0sjob.ru
		students.0sjob.ua
		students.0sjob.uz
		hr.0sjob.ru
		hr.0sjob.ua
		hr.0sjob.uz;

	access_log	/srv/src/nginx/logs/0sjob_access.log;
	error_log	/srv/src/nginx/logs/0sjob_error.log;

	error_page 403 /403/index.html;
	error_page 404 /404/index.html;
	proxy_buffers		16 16k;
	proxy_buffer_size	32k;

	location /.git/ { rewrite /.* / permanent; }
	location /img/  {
		access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
		rewrite ^/(.*)$ http://img.0sjob.ru/$1  permanent;
	}

	if ( $http_acunetix_product ~* "Scanner")
	{
		return 404;
	}

	location / {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;

		client_max_body_size	8m;
		proxy_set_header  Host       $host;
		proxy_set_header  X-Real-IP  $remote_addr;
		proxy_set_header  X-Device-Type $0sjob_is_mobile;
	}

	location @errors {
		proxy_pass        http://localhost:503;
	}
}


#
# services
#

server {

    listen 0.0.0.0:80;

    server_name
        services.0sjob.ru
        services.0sjob.ua
        services.0sjob.uz;

    access_log  /srv/src/nginx/logs/0sjob_access.log;
    error_log   /srv/src/nginx/logs/0sjob_error.log;

    error_page 403 /403/index.html;
    error_page 404 /404/index.html;
	proxy_buffers        16 16k;
	proxy_buffer_size    32k;

    location /.git/ { rewrite /.* / permanent; }
    location /img/  {
        access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
        rewrite ^/(.*)$ http://img.0sjob.ru/$1  permanent;
    }

    if ( $http_acunetix_product ~* "Scanner")
    {
        return 404;
    }

    location / {
        # Даем возможность бекенду решать, что следует кешировать, а что нет
        proxy_cache SERVICES_0sjob;
        proxy_cache_key $scheme$proxy_host$host$request_uri;

        proxy_set_header  Host       $host;
        proxy_set_header  X-Real-IP  $remote_addr;

        proxy_pass http://0sjob_backend;
    }

    location @errors {
        proxy_pass        http://localhost:503;
    }
}

#
# WWW
#
server {

	listen 0.0.0.0:80;

	server_name *.0sjob.ru *.0sjob.ua *.0sjob.uz 0sjob.*;
	#limit_conn   one  150;
	#limit_req   zone=rone  burst=500;
	access_log	/srv/src/nginx/logs/0sjob_access.log;
	error_log	/srv/src/nginx/logs/0sjob_error.log;

	error_page 403 /403/index.html;
	error_page 404 /404/index.html;
        
	proxy_buffers        16 16k;
	proxy_buffer_size    32k;

	location /.git/ { rewrite /.* / permanent; }
	location /img/  {
		access_log  /srv/src/nginx/logs/0sjob.img-redirect.log;
		rewrite ^/(.*)$ http://img.0sjob.ru/$1  permanent;
	}

	if ( $http_acunetix_product ~* "Scanner")
	{
		return 404;
	}

	# location ~ ^/(admin|support|sso|export/kavanga_targeting.html).* { rewrite ^(.*)$ https://$host$request_uri redirect; } #FIXME: require ssl!

	if ( $host ~* "0sjob\.([a-z]{2,})" )
	{
		set $our_domain $1;
		rewrite ^/images/(.*)$ http://public.0sjob.$our_domain/images/$1 redirect;
	}

	location / {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;



		location = / {
			proxy_pass http://$0sjob_upstream;
		}
        location = /new {
            proxy_pass http://$0sjob_upstream;
        }
		location /select-geo {
			proxy_pass http://$0sjob_upstream;
		}
		location /dev/test {
			proxy_pass http://$0sjob_upstream;
		}
		location /dev/test/absolute-layout {
			proxy_pass http://$0sjob_upstream;
		}
		location /dev/test/absolute-layout/suggest {
			proxy_pass http://$0sjob_upstream;
		}
		location /dev/test/icons {
			proxy_pass http://$0sjob_upstream;
		}
		location /select-profession {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/tariff/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/tariff/resume {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/vacancy/create {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/vacancy-list {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/login {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/mobile-registration {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/phone-confirmation {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/restore-password {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/upgrade {
			proxy_pass http://$0sjob_upstream;
		}
		location = /hr/welcome/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /app/login {
			proxy_pass http://$0sjob_upstream;
		}
		location /app/registration {
			proxy_pass http://$0sjob_upstream;
		}
		location /app/phone-confirmation {
			proxy_pass http://$0sjob_upstream;
		}
		location /app/restore-password {
			proxy_pass http://$0sjob_upstream;
		}
        location /user/resume/ {
            proxy_pass http://$0sjob_upstream;
        }

        location /info/user_agreement.html {
			proxy_pass http://$0sjob_upstream;
		}
		location /info/personalnye_dannye.html {
			proxy_pass http://$0sjob_upstream;
		}
		location /info/rules.html {
			proxy_pass http://$0sjob_upstream;
		}
		location = /rabota/ {
			proxy_pass http://$0sjob_upstream;
		}
		location = /banned/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /feedback/ {
			proxy_pass http://$0sjob_upstream;
		}

        location /resume/ {

            location /resume/search_resume.html {
                proxy_pass http://$0sjob_upstream_for_resume_search;
            }
            location /resume/choose-metro/ {
                proxy_pass http://$0sjob_upstream;
            }
            location /resume/choose-search-town/ {
                proxy_pass http://$0sjob_upstream;
            }
            location /resume/choose-search-catalogue/ {
                proxy_pass http://$0sjob_upstream;
            }
            location /resume/select-profession/ {
                proxy_pass http://$0sjob_upstream;
            }
            location /resume/invite/ {
                proxy_pass http://$0sjob_upstream;
            }

            location = /resume/update_datepub.html {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/close-social/ {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/social-subscribe/ {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/send_resume_to_email.html {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/create/ {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/complain/ {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/faq.html {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/del_resume.html {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/professions_catalogue/ {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/rating_resume_info.html {
                proxy_pass http://0sjob_backend;
            }
            location = /resume/list/ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/download/cv-(\d+)\.html$ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/received_messages-(\d+)\.html$ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/mailing_history-(\d+)\.html$ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/\d+/$ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/views-(\d+)\.html$ {
                proxy_pass http://0sjob_backend;
            }
            location ~ ^/resume/cv-(\d+)\.html$ {
                proxy_pass http://0sjob_backend;
            }

            location = /resume/ {
                proxy_pass http://$0sjob_upstream;
            }

            # эти правила с регулярками должны обрабатываться в последнюю очередь
            location ~ ^/resume/([\w-]+)\.html$ {
                proxy_pass http://$0sjob_upstream;
            }
            location ~ ^/resume/([\w-]+)/$ {
                proxy_pass http://$0sjob_upstream;
            }

            location /resume/ {
                proxy_pass http://0sjob_backend;
            }

        }

		location /jsapi {
			proxy_pass http://$0sjob_upstream;
		}
		location /mock/api {
			proxy_pass http://$0sjob_upstream_mock;
		}
		location /sandbox/ {
			proxy_pass http://$0sjob_staging_upstream;
		}
		location /sandbox/geo/ {
			proxy_pass http://$0sjob_staging_upstream;
		}
		location /vacancy/search/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/search_form.html {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/choose-search-town/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/choose-search-catalogue/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/edit/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/placeagain/ {
			proxy_pass http://$0sjob_upstream;
		}
		location ~ "^/vakansii/[\w-]+-\d+-\d{6}\.html$" {
			proxy_pass http://0sjob_backend;
		}
		location ~ "^/vakansii/\d+-\d{6}\.html$" {
			proxy_pass http://0sjob_backend;
		}
		location ~ "^/vakansii/vacancy-\d+-\d{6}\.html$" {
			proxy_pass http://0sjob_backend;
		}
		location ~ ^/vakansii/vacancy-\d+\.html$ {
			proxy_pass http://0sjob_backend;
		}
		location ~ "^/vakansii/archive/[\w-]+-\d+-\d{6}\.html$" {
			proxy_pass http://0sjob_backend;
		}
		location ~ ^/vakansii/([\w-]+)-(\d+)\.html$ {
			proxy_pass http://$0sjob_upstream;
		}
		location ~ ^/vakansii/archive/([\w-]+)-(\d+)\.html$ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vakansii/izbrannoe/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vakansii/ {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/select-profession {
			proxy_pass http://$0sjob_upstream;
		}
		location /vacancy/choose-metro {
			proxy_pass http://$0sjob_upstream;
		}
        location /metro/ {
            proxy_pass http://$0sjob_upstream;
        }
		location ~ ^/clients/([\w-]+)-(\d+)\.html$ {
			proxy_pass http://$0sjob_upstream;
		}
		location /hr/inbox.html {
			proxy_pass http://$0sjob_upstream;
		}


		client_max_body_size	8m;
		proxy_set_header  Host       $host;
		proxy_set_header  X-Real-IP  $remote_addr;
		proxy_set_header  X-Device-Type $0sjob_x_device_type;
		#proxy_set_header  X-Forwarded-For $proxy_add_x_forwarder_for;
		add_header  X-mb "$0sjob_upstream"; # FIXME: debug header!
	}
    location  /cv/ {
        # Даем возможность бекенду решать, что следует кешировать, а что нет
        proxy_cache SERVICES_0sjob;
        proxy_cache_key $scheme$proxy_host$host$request_uri;

        proxy_set_header  Host       $host;
        proxy_set_header  X-Real-IP  $remote_addr;

        proxy_pass http://0sjob_backend;
    }
    location  /hrom/ {
        # Даем возможность бекенду решать, что следует кешировать, а что нет
        proxy_cache SERVICES_0sjob;
        proxy_cache_key $scheme$proxy_host$host$request_uri;

        proxy_set_header  Host       $host;
        proxy_set_header  X-Real-IP  $remote_addr;

        proxy_pass http://0sjob_backend;
    }
	location  /public/ {
		client_max_body_size	8m;

		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_pass http://0sjob_backend_nodejs;
	}
	location /assets/ {
		client_max_body_size    8m;

		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_pass http://0sjob_backend_nodejs;
		add_header Access-Control-Allow-Origin "*";
	}
	location ~ ^/(stc|cdn)/.* {
		proxy_pass        http://0sjob_backend;
		client_max_body_size	8m;
		proxy_set_header  Host       $host;
		proxy_set_header  X-Real-IP  $remote_addr;

		proxy_set_header  If-Modified-Since "";
		proxy_set_header If-None-Match "";
	}
	location ~ ^/sitemap(.*)\.xml$
	{
		set $our_file_postfix $1;

		if ( $host ~* "^([-a-z0-9.]+)\.0sjob\.([a-z]{2,})$" )
		{
			set $our_domain $2;
			set $our_subdomain $1;
		}
		proxy_pass        http://0sjob_public/sitemap/sitemap.$our_domain/$our_subdomain.sitemap$our_file_postfix.xml;
		proxy_set_header  Host       public.0sjob.$our_domain;
		proxy_set_header  X-Real-IP  $remote_addr;
		proxy_set_header  X-Device-Type $0sjob_is_mobile;
	}
	location @errors {
		proxy_pass        http://localhost:503;
	}
	location /info/checkup/hr_user_auth.html {
		proxy_pass        http://0sjob_debug/info/checkup/hr_user_auth.html;
		proxy_set_header  host       $host;
		proxy_set_header  x-real-ip  $remote_addr;
		proxy_set_header  X-Device-Type $0sjob_is_mobile;
	}
	location ~ ^/(vacancy|resume)/qrcode/notauth/ {
		error_page   500 502 503 504  @errors;
		proxy_pass        http://0sjob_backend;
		proxy_set_header  Host       $host;
		proxy_set_header  X-Real-IP  $remote_addr;

		error_page 403 /403/index.html;
		error_page 404 /404/index.html;
	}

}

#
# SSL options
#


#
# Locations for IMG
#


#
# Locations for public
#


